The automatically generated patch puts this free form text on top of it.

If you are using gbp-buildpackage(1), you probably don't need this file.

If you are using dgit-maint-merge(7), please consider text as follows.

The Debian packaging of foo is maintained in git, using the merging workflow
described in dgit-maint-merge(7).  There isn't a patch queue that can be
represented as a quilt series.

A detailed breakdown of the changes is available from their canonical
representation - git commits in the packaging repository.  For example, to see
the changes made by the Debian maintainer in the first upload of upstream
version 1.2.3, you could use:

    % git clone https://git.dgit.debian.org/foo
    % cd foo
    % git log --oneline 1.2.3..debian/1.2.3-1 -- . ':!debian'

(If you have dgit, use `dgit clone foo`, rather than plain `git clone`.)

A single combined diff, containing all the changes, follows.
--- scratch-desktop-3.29.1.orig/scripts/electron-builder-wrapper.js
+++ scratch-desktop-3.29.1/scripts/electron-builder-wrapper.js
@@ -117,7 +117,11 @@ const calculateTargets = function (wrapp
         windowsDirectDownload: {
             name: 'nsis:ia32',
             platform: 'win32'
-        }
+        },
+	linuxDist: {
+            name: 'dir',
+            platform: 'linux'
+	}
     };
     const targets = [];
     switch (process.platform) {
@@ -145,6 +149,10 @@ const calculateTargets = function (wrapp
         }
         targets.push(availableTargets.macDirectDownload);
         break;
+    case 'linux':
+        // Run in two passes so we can skip signing the AppX for distribution through the MS Store.
+        targets.push(availableTargets.linuxDist);
+        break;
     default:
         throw new Error(`Could not determine targets for platform: ${process.platform}`);
     }
